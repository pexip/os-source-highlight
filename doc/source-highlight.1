.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.10.
.TH SOURCE-HIGHLIGHT "1" "June 2019" "Source-highlight 3.1.9 (library: 4:1:0)" "User Commands"
.SH NAME
Source-highlight \- convert source code to syntax highlighted document
.SH SYNOPSIS
.B source-highlight
[\fI\,OPTIONS\/\fR]... \fI\,< INPUT_FILE > OUTPUT_FILE\/\fR
.SH DESCRIPTION
GNU GNU source\-highlight 3.1.9
.PP
Highlight the syntax of a source file (e.g. Java) into a specific format (e.g.
HTML)
.IP
source\-highlight [OPTIONS]... \fB\-i\fR INPUT_FILE \fB\-o\fR OUTPUT_FILE
source\-highlight [OPTIONS]... [FILES]...
.TP
\fB\-h\fR, \fB\-\-help\fR
Print help and exit
.TP
\fB\-\-detailed\-help\fR
Print help, including all details and hidden
options, and exit
.TP
\fB\-V\fR, \fB\-\-version\fR
Print version and exit
.TP
\fB\-i\fR, \fB\-\-input\fR=\fI\,FILENAME\/\fR
Input file (default=stdin)
.TP
\fB\-o\fR, \fB\-\-output\fR=\fI\,FILENAME\/\fR
Output file (default=stdout, when the third
invocation form is used). If 'STDOUT' is
specified, the output is directed to standard
output
.PP
You can simply specify some files at the command line and also use regular
expressions (for instance *.java).  In this case the name for the output files
will be formed using the name of the source file with a .EXT appended, where
EXT is the extension chosen according to the output format specified (for
instance .html).
.TP
\fB\-s\fR, \fB\-\-src\-lang\fR=\fI\,STRING\/\fR
source language (use \fB\-\-lang\-list\fR to get the
complete list).  If not specified, the source
language will be guessed from the file
extension.
.TP
\fB\-\-lang\-list\fR
list all the supported language and associated
language definition file
.TP
\fB\-\-outlang\-list\fR
list all the supported output language and
associated language definition file
.TP
\fB\-f\fR, \fB\-\-out\-format\fR=\fI\,STRING\/\fR
output format (use \fB\-\-outlang\-list\fR to get the
complete list)  (default=`html')
.TP
\fB\-d\fR, \fB\-\-doc\fR
create an output file that can be used as a
stand alone document (e.g., not to be
included in another one)
.TP
\fB\-\-no\-doc\fR
cancel the \fB\-\-doc\fR option even if it is implied
(e.g., when css is given)
.TP
\fB\-c\fR, \fB\-\-css\fR=\fI\,FILENAME\/\fR
the external style sheet filename.  Implies
\fB\-\-doc\fR
.TP
\fB\-T\fR, \fB\-\-title\fR=\fI\,STRING\/\fR
give a title to the output document.  Implies
\fB\-\-doc\fR
.TP
\fB\-t\fR, \fB\-\-tab\fR=\fI\,INT\/\fR
specify tab length.  (default=`8')
.TP
\fB\-H\fR, \fB\-\-header\fR=\fI\,FILENAME\/\fR
file to insert as header
.TP
\fB\-F\fR, \fB\-\-footer\fR=\fI\,FILENAME\/\fR
file to insert as footer
.TP
\fB\-\-style\-file\fR=\fI\,FILENAME\/\fR
specify the file containing format options
(default=`default.style')
.TP
\fB\-\-style\-css\-file\fR=\fI\,FILENAME\/\fR specify the file containing format options (in
css syntax)
.TP
\fB\-\-style\-defaults\fR=\fI\,FILENAME\/\fR specify the file containing defaults for format
options  (default=`style.defaults')
.TP
\fB\-\-outlang\-def\fR=\fI\,FILENAME\/\fR
output language definition file
.TP
\fB\-\-outlang\-map\fR=\fI\,FILENAME\/\fR
output language map file
(default=`outlang.map')
.TP
\fB\-\-data\-dir\fR=\fI\,PATH\/\fR
directory where language definition files and
language maps are searched for.  If not
specified these files are searched for in the
current directory and in the data dir
installation directory
.TP
\fB\-\-output\-dir\fR=\fI\,PATH\/\fR
output directory
.TP
\fB\-\-lang\-def\fR=\fI\,FILENAME\/\fR
language definition file
.TP
\fB\-\-lang\-map\fR=\fI\,FILENAME\/\fR
language map file  (default=`lang.map')
.TP
\fB\-\-show\-lang\-elements\fR=\fI\,FILENAME\/\fR
prints the language elements that are defined
.IP
in the language definition file
.TP
\fB\-\-infer\-lang\fR
force to infer source script language
(overriding given language specification)
.SS "Lines:"
.TP
\fB\-n\fR, \fB\-\-line\-number\fR[=\fI\,PADDING\/\fR]
number all output lines, using the specified
padding character  (default=`0')
.TP
\fB\-\-line\-number\-ref\fR[=\fI\,PREFIX\/\fR]
number all output lines and generate an anchor,
.TP
made of the specified prefix + the line
number  (default=`line')
.PP
Filtering output:
.IP
Mode: linerange
.IP
specifying line ranges
.TP
\fB\-\-line\-range\fR=\fI\,STRING\/\fR
generate only the lines in the specified
range(s)
.TP
\fB\-\-range\-separator\fR=\fI\,STRING\/\fR
the optional separator to be printed among
ranges (e.g., "...")
.TP
\fB\-\-range\-context\fR=\fI\,INT\/\fR
number of (context) lines generated even if not
in range
.IP
Mode: regexrange
.IP
specifying regular expression delimited ranges
.TP
\fB\-\-regex\-range\fR=\fI\,STRING\/\fR
generate only the lines within the specified
regular expressions
.SS "reference generation:"
.TP
\fB\-\-gen\-references\fR=\fI\,STRING\/\fR
generate references  (possible
values="inline", "postline", "postdoc"
default=`inline')
.TP
\fB\-\-ctags\-file\fR=\fI\,FILENAME\/\fR
specify the file generated by ctags that will
be used to generate references
(default=`tags')
.TP
\fB\-\-ctags\fR=\fI\,CMD\/\fR
how to run the ctags command.  If this option
is not specified, ctags will be executed with
the default value.  If it is specified with
an empty string, ctags will not be executed
at all  (default=`ctags \fB\-\-excmd\fR=\fI\,n\/\fR
\fB\-\-tag\-relative\fR=\fI\,yes\/\fR')
.SS "testing:"
.TP
\fB\-v\fR, \fB\-\-verbose\fR
verbose mode on
.TP
\fB\-q\fR, \fB\-\-quiet\fR
print no progress information
.TP
\fB\-\-binary\-output\fR
write output files in binary mode
.TP
\fB\-\-statistics\fR
print some statistics (i.e., elapsed time)
.TP
\fB\-\-gen\-version\fR
put source\-highlight version in the generated
file  (default=on)
.TP
\fB\-\-check\-lang\fR=\fI\,FILENAME\/\fR
only check the correctness of a language
definition file
.TP
\fB\-\-check\-outlang\fR=\fI\,FILENAME\/\fR
only check the correctness of an output
language definition file
.TP
\fB\-\-failsafe\fR
if no language definition is found for the
input, it is simply copied to the output
.TP
\fB\-g\fR, \fB\-\-debug\-langdef\fR[=\fI\,TYPE\/\fR]
debug a language definition.  In dump mode just
dumps all the steps; in interactive, at each
step, waits for some input (press ENTER to
step)  (possible values="interactive",
"dump" default=`dump')
.TP
\fB\-\-show\-regex\fR=\fI\,FILENAME\/\fR
show the regular expression automaton
corresponding to a language definition file
.PP
Maintained by Lorenzo Bettini <http://www.lorenzobettini.it>
.SH "REPORTING BUGS"
Report bugs to <bug\-source\-highlight at gnu.org>
.SH COPYRIGHT
Copyright \(co 1999\-2008 Lorenzo Bettini <http://www.lorenzobettini.it>
This program comes with ABSOLUTELY NO WARRANTY.
.br
This is free software; you may redistribute copies of the program
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING.
.SH "SEE ALSO"
The full documentation for
.B Source-highlight
is maintained as a Texinfo manual.  If the
.B info
and
.B Source-highlight
programs are properly installed at your site, the command
.IP
.B info Source-highlight
.PP
should give you access to the complete manual.
