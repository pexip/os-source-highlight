@c Generator: GNU source-highlight, by Lorenzo Bettini, http://www.gnu.org/software/src-highlite
@example
@r{@i{# definitions for C++}}

@b{include} @t{"c_comment.lang"}

(@t{@i{keyword}},@t{@i{normal}},@t{@i{classname}}) = 
  @t{`(\<(?:enum|class|struct|typename|union))([[:blank:]]+)([[:alnum:]_]+)`}

@b{include} @t{"c_preprocessor.lang"}

@b{include} @t{"number.lang"}

@b{include} @t{"c_string.lang"}

@t{@i{keyword}} = @t{"__asm|__cdecl|__declspec|__export|__far16"},
  @t{"__fastcall|__fortran|__import"},
  @t{"__pascal|__rtti|__stdcall|_asm|_cdecl"},
  @t{"__except|_export|_far16|_fastcall"},
  @t{"__finally|_fortran|_import|_pascal|_stdcall|__thread|__try|asm|auto"},
  @t{"break|case|cdecl|const|continue|default"},
  @t{"do|else|enum|extern|for|goto"},
  @t{"if|pascal"},
  @t{"register|restrict|return|sizeof|static"},
  @t{"struct|switch"},
  @t{"typedef|union"},
  @t{"volatile|while"},
  @t{"catch|class|const_cast|constexpr|decltype|delete"},
  @t{"dynamic_cast|explicit|export|false|final|friend"},
  @t{"inline|mutable|namespace|new|noexcept|operator|override"},
  @t{"private|protected|public|reinterpret_cast|static_cast"},
  @t{"static_assert|template|this|throw|true"},
  @t{"try|typeid|typename"},
  @t{"using|virtual"}

@t{@i{label}} = @t{'^[[:blank:]]*[[:alnum:]]+:[[:blank:]]*\z'}

@t{@i{type}} = @t{"bool|char|double|float|int|long"},
  @t{"short|signed|unsigned|void|wchar_t"},
  @t{"char16_t|char32_t"}

@b{include} @t{"symbols.lang"}

@t{@i{cbracket}} = @t{"@{|@}"}

@b{include} @t{"function.lang"}

@b{include} @t{"clike_vardeclaration.lang"}

@end example